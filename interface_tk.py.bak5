#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.20
#  in conjunction with Tcl version 8.6
#    Jan 23, 2019 02:22:21 PM -03  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import interface_tk_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    interface_tk_support.set_Tk_var()
    top = Toplevel1 (root)
    interface_tk_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    interface_tk_support.set_Tk_var()
    top = Toplevel1 (w)
    interface_tk_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#ececec' # Closest X11 color: 'gray92' 

        top.geometry("936x633+532+86")
        top.title("New Toplevel")
        top.configure(highlightcolor="black")

        self.Input_Dados = tk.Frame(top)
        self.Input_Dados.place(relx=0.053, rely=0.032, relheight=0.45
                , relwidth=0.155)
        self.Input_Dados.configure(relief='groove')
        self.Input_Dados.configure(borderwidth="2")
        self.Input_Dados.configure(relief='groove')
        self.Input_Dados.configure(width=145)

        self.Label1 = tk.Label(self.Input_Dados)
        self.Label1.place(relx=0.069, rely=0.035, height=22, width=116)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(anchor='sw')
        self.Label1.configure(borderwidth="2")
        self.Label1.configure(text='''Número de Iterações''')

        self.Label1_4 = tk.Label(self.Input_Dados)
        self.Label1_4.place(relx=0.069, rely=0.14, height=22, width=106)
        self.Label1_4.configure(activebackground="#f9f9f9")
        self.Label1_4.configure(anchor='sw')
        self.Label1_4.configure(borderwidth="2")
        self.Label1_4.configure(text='''Dim''')

        self.Label1_5 = tk.Label(self.Input_Dados)
        self.Label1_5.place(relx=0.069, rely=0.246, height=22, width=106)
        self.Label1_5.configure(activebackground="#f9f9f9")
        self.Label1_5.configure(anchor='sw')
        self.Label1_5.configure(borderwidth="2")
        self.Label1_5.configure(text='''CR''')

        self.Label1_6 = tk.Label(self.Input_Dados)
        self.Label1_6.place(relx=0.069, rely=0.351, height=22, width=106)
        self.Label1_6.configure(activebackground="#f9f9f9")
        self.Label1_6.configure(anchor='sw')
        self.Label1_6.configure(borderwidth="2")
        self.Label1_6.configure(text='''F''')

        self.Label1_7 = tk.Label(self.Input_Dados)
        self.Label1_7.place(relx=0.069, rely=0.456, height=22, width=106)
        self.Label1_7.configure(activebackground="#f9f9f9")
        self.Label1_7.configure(anchor='sw')
        self.Label1_7.configure(borderwidth="2")
        self.Label1_7.configure(text='''Polupation Size''')

        self.Label1_8 = tk.Label(self.Input_Dados)
        self.Label1_8.place(relx=0.069, rely=0.561, height=22, width=106)
        self.Label1_8.configure(activebackground="#f9f9f9")
        self.Label1_8.configure(anchor='sw')
        self.Label1_8.configure(borderwidth="2")
        self.Label1_8.configure(text='''Upper Limit''')

        self.Label1_9 = tk.Label(self.Input_Dados)
        self.Label1_9.place(relx=0.069, rely=0.667, height=22, width=106)
        self.Label1_9.configure(activebackground="#f9f9f9")
        self.Label1_9.configure(anchor='sw')
        self.Label1_9.configure(borderwidth="2")
        self.Label1_9.configure(text='''Lower Limit''')

        self.Label1_10 = tk.Label(self.Input_Dados)
        self.Label1_10.place(relx=0.069, rely=0.772, height=22, width=106)
        self.Label1_10.configure(activebackground="#f9f9f9")
        self.Label1_10.configure(anchor='sw')
        self.Label1_10.configure(borderwidth="2")
        self.Label1_10.configure(text='''Print Status''')

        self.Label1_1 = tk.Label(self.Input_Dados)
        self.Label1_1.place(relx=0.069, rely=0.877, height=22, width=106)
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(anchor='sw')
        self.Label1_1.configure(borderwidth="2")
        self.Label1_1.configure(text='''Function''')

        self.Frame2 = tk.Frame(top)
        self.Frame2.place(relx=0.203, rely=0.032, relheight=0.45, relwidth=0.134)

        self.Frame2.configure(relief='groove')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief='groove')
        self.Frame2.configure(width=125)

        self.ent_num_iter = tk.Entry(self.Frame2)
        self.ent_num_iter.place(relx=0.08, rely=0.035, height=22, relwidth=0.848)

        self.ent_num_iter.configure(background="white")
        self.ent_num_iter.configure(font="TkFixedFont")
        self.ent_num_iter.configure(selectbackground="#c4c4c4")

        self.ent_dim = tk.Entry(self.Frame2)
        self.ent_dim.place(relx=0.08, rely=0.14,height=22, relwidth=0.848)
        self.ent_dim.configure(background="white")
        self.ent_dim.configure(font="TkFixedFont")
        self.ent_dim.configure(selectbackground="#c4c4c4")

        self.ent_CR = tk.Entry(self.Frame2)
        self.ent_CR.place(relx=0.08, rely=0.246,height=22, relwidth=0.848)
        self.ent_CR.configure(background="white")
        self.ent_CR.configure(font="TkFixedFont")
        self.ent_CR.configure(selectbackground="#c4c4c4")

        self.ent_F = tk.Entry(self.Frame2)
        self.ent_F.place(relx=0.08, rely=0.351,height=22, relwidth=0.848)
        self.ent_F.configure(background="white")
        self.ent_F.configure(font="TkFixedFont")
        self.ent_F.configure(selectbackground="#c4c4c4")

        self.ent_pop_size = tk.Entry(self.Frame2)
        self.ent_pop_size.place(relx=0.08, rely=0.456, height=22, relwidth=0.848)

        self.ent_pop_size.configure(background="white")
        self.ent_pop_size.configure(font="TkFixedFont")
        self.ent_pop_size.configure(selectbackground="#c4c4c4")

        self.ent_upper_lim = tk.Entry(self.Frame2)
        self.ent_upper_lim.place(relx=0.08, rely=0.561, height=22
                , relwidth=0.848)
        self.ent_upper_lim.configure(background="white")
        self.ent_upper_lim.configure(font="TkFixedFont")
        self.ent_upper_lim.configure(selectbackground="#c4c4c4")

        self.ent_lower_lim = tk.Entry(self.Frame2)
        self.ent_lower_lim.place(relx=0.08, rely=0.667, height=22
                , relwidth=0.848)
        self.ent_lower_lim.configure(background="white")
        self.ent_lower_lim.configure(font="TkFixedFont")
        self.ent_lower_lim.configure(selectbackground="#c4c4c4")

        self.menu_checkbox = tk.ttk.Combobox(self.Frame2,textvariable=["pedro","pacheco"])
        self.menu_checkbox.place(relx=0.08, rely=0.877, height=30, width=105)
        self.menu_checkbox.configure(activebackground="#f9f9f9")
        self.menu_checkbox.configure(text='''Selecione Função''')

        self.Sel_MostrarPrint = tk.Checkbutton(self.Frame2)
        self.Sel_MostrarPrint.place(relx=0.08, rely=0.772, relheight=0.077
                , relwidth=0.544)
        self.Sel_MostrarPrint.configure(activebackground="#f9f9f9")
        self.Sel_MostrarPrint.configure(justify='left')
        self.Sel_MostrarPrint.configure(text='''Mostrar''')
        self.Sel_MostrarPrint.configure(variable=interface_tk_support.che86)

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.053, rely=0.506, height=30, width=104)
        self.Button1.configure(text='''Limpar Dados''')

        self.Button3 = tk.Button(top)
        self.Button3.place(relx=0.171, rely=0.506, height=30, width=85)
        self.Button3.configure(text='''Executar''')
        self.Button3.configure(width=85)

        self.Canvas1 = tk.Canvas(top)
        self.Canvas1.place(relx=0.363, rely=0.032, relheight=0.57
                , relwidth=0.621)
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(relief='ridge')
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(width=581)

        self.Button4 = tk.Button(top)
        self.Button4.place(relx=0.267, rely=0.506, height=30, width=60)
        self.Button4.configure(text='''Plot''')
        self.Button4.configure(width=60)

if __name__ == '__main__':
    vp_start_gui()





